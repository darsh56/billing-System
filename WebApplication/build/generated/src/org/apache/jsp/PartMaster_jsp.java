package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.Bean.PartMaster_Bean;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import com.Model.DBactivation;
import com.Bean.ClientForm_Bean;
import com.Bean.City_Bean;
import java.util.ArrayList;
import com.Bean.State_Bean;
import java.util.Iterator;

public final class PartMaster_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Part Master</title>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n");
      out.write("        <script src=\"js/jquery-1.11.1.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"js/clockp.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/clockh.js\"></script> \n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"js/ddaccordion.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("ddaccordion.init({\n");
      out.write("\theaderclass: \"submenuheader\", //Shared CSS class name of headers group\n");
      out.write("\tcontentclass: \"submenu\", //Shared CSS class name of contents group\n");
      out.write("\trevealtype: \"click\", //Reveal content when user clicks or onmouseover the header? Valid value: \"click\", \"clickgo\", or \"mouseover\"\n");
      out.write("\tmouseoverdelay: 200, //if revealtype=\"mouseover\", set delay in milliseconds before header expands onMouseover\n");
      out.write("\tcollapseprev: true, //Collapse previous content (so only one open at any time)? true/false \n");
      out.write("\tdefaultexpanded: [], //index of content(s) open by default [index1, index2, etc] [] denotes no content\n");
      out.write("\tonemustopen: false, //Specify whether at least one header should be open always (so never all headers closed)\n");
      out.write("\tanimatedefault: false, //Should contents open by default be animated into view?\n");
      out.write("\tpersiststate: true, //persist state of opened contents within browser session?\n");
      out.write("\ttoggleclass: [\"\", \"\"], //Two CSS classes to be applied to the header when it's collapsed and expanded, respectively [\"class1\", \"class2\"]\n");
      out.write("\ttogglehtml: [\"suffix\", \"<img src='images/plus.gif' class='statusicon' />\", \"<img src='images/minus.gif' class='statusicon' />\"], //Additional HTML added to the header when it's collapsed and expanded, respectively  [\"position\", \"html1\", \"html2\"] (see docs)\n");
      out.write("\tanimatespeed: \"fast\", //speed of animation: integer in milliseconds (ie: 200), or keywords \"fast\", \"normal\", or \"slow\"\n");
      out.write("\toninit:function(headers, expandedindices){ //custom code to run when headers have initalized\n");
      out.write("\t\t//do nothing\n");
      out.write("\t},\n");
      out.write("\tonopenclose:function(header, index, state, isuseractivated){ //custom code to run whenever a header is opened or closed\n");
      out.write("\t\t//do nothing\n");
      out.write("\t}\n");
      out.write("})\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"js/jconfirmaction.jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\t\n");
      out.write("\t$(document).ready(function() {\n");
      out.write("\t\t$('.ask').jConfirmAction();\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("</script>\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\" src=\"js/niceforms.js\"></script>\n");
      out.write("<script language=JavaScript>\n");
      out.write("var datePickerDivID = \"datepicker\";\n");
      out.write("var iFrameDivID = \"datepickeriframe\";\n");
      out.write("var dayArrayShort = new Array('Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa');\n");
      out.write("var dayArrayMed = new Array('Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat');\n");
      out.write("var dayArrayLong = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');\n");
      out.write("var monthArrayShort = new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n");
      out.write("var monthArrayMed = new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec');\n");
      out.write("var monthArrayLong = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');\n");
      out.write("var defaultDateSeparator = \"/\"; // common values would be \"/\" or \"-\"\n");
      out.write("var defaultDateFormat = \"dmy\" // valid values are \"mdy\", \"dmy\", and \"ymd\"\n");
      out.write("var dateSeparator = defaultDateSeparator;\n");
      out.write("var dateFormat = defaultDateFormat;\n");
      out.write("function displayDatePicker(dateFieldName, displayBelowThisObject, dtFormat, dtSep)\n");
      out.write("{\n");
      out.write("var targetDateField = document.getElementsByName (dateFieldName).item(0);\n");
      out.write("\n");
      out.write("// if we weren't told what node to display the datepicker beneath, just display it\n");
      out.write("// beneath the date field we're updating\n");
      out.write("if (!displayBelowThisObject)\n");
      out.write("displayBelowThisObject = targetDateField;\n");
      out.write("\n");
      out.write("// if a date separator character was given, update the dateSeparator variable\n");
      out.write("if (dtSep)\n");
      out.write("dateSeparator = dtSep;\n");
      out.write("else\n");
      out.write("dateSeparator = defaultDateSeparator;\n");
      out.write("\n");
      out.write("// if a date format was given, update the dateFormat variable\n");
      out.write("if (dtFormat)\n");
      out.write("dateFormat = dtFormat;\n");
      out.write("else\n");
      out.write("dateFormat = defaultDateFormat;\n");
      out.write("\n");
      out.write("var x = displayBelowThisObject.offsetLeft;\n");
      out.write("var y = displayBelowThisObject.offsetTop + displayBelowThisObject.offsetHeight ;\n");
      out.write("\n");
      out.write("// deal with elements inside tables and such\n");
      out.write("var parent = displayBelowThisObject;\n");
      out.write("while (parent.offsetParent) {\n");
      out.write("parent = parent.offsetParent;\n");
      out.write("x += parent.offsetLeft;\n");
      out.write("y += parent.offsetTop ;\n");
      out.write("}\n");
      out.write("\n");
      out.write("drawDatePicker(targetDateField, x, y);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function drawDatePicker(targetDateField, x, y)\n");
      out.write("{\n");
      out.write("var dt = getFieldDate(targetDateField.value );\n");
      out.write("\n");
      out.write("if (!document.getElementById(datePickerDivID)) {\n");
      out.write("var newNode = document.createElement(\"div\");\n");
      out.write("newNode.setAttribute(\"id\", datePickerDivID);\n");
      out.write("newNode.setAttribute(\"class\", \"dpDiv\");\n");
      out.write("newNode.setAttribute(\"style\", \"visibility: hidden;\");\n");
      out.write("document.body.appendChild(newNode);\n");
      out.write("}\n");
      out.write("// move the datepicker div to the proper x,y coordinate and toggle the visiblity\n");
      out.write("var pickerDiv = document.getElementById(datePickerDivID);\n");
      out.write("pickerDiv.style.position = \"absolute\";\n");
      out.write("pickerDiv.style.left = x + \"px\";\n");
      out.write("pickerDiv.style.top = y + \"px\";\n");
      out.write("pickerDiv.style.visibility = (pickerDiv.style.visibility == \"visible\" ? \"hidden\" : \"visible\");\n");
      out.write("pickerDiv.style.display = (pickerDiv.style.display == \"block\" ? \"none\" : \"block\");\n");
      out.write("pickerDiv.style.zIndex = 10000;\n");
      out.write("\n");
      out.write("// draw the datepicker table\n");
      out.write("refreshDatePicker(targetDateField.name, dt.getFullYear(), dt.getMonth(), dt.getDate());\n");
      out.write("}\n");
      out.write("/**\n");
      out.write("This is the function that actually draws the datepicker calendar.\n");
      out.write("*/\n");
      out.write("function refreshDatePicker(dateFieldName, year, month, day)\n");
      out.write("{\n");
      out.write("// if no arguments are passed, use today's date; otherwise, month and year\n");
      out.write("// are required (if a day is passed, it will be highlighted later)\n");
      out.write("var thisDay = new Date();\n");
      out.write("\n");
      out.write("if ((month >= 0) && (year > 0)) {\n");
      out.write("thisDay = new Date(year, month, 1);\n");
      out.write("} else {\n");
      out.write("day = thisDay.getDate();\n");
      out.write("thisDay.setDate(1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("var crlf = \"\\r\\n\";\n");
      out.write("var TABLE = \"<table cols=7 class='dpTable'>\" + crlf;\n");
      out.write("var xTABLE = \"</table>\" + crlf;\n");
      out.write("var TR = \"<tr class='dpTR'>\";\n");
      out.write("var TR_title = \"<tr class='dpTitleTR'>\";\n");
      out.write("var TR_days = \"<tr class='dpDayTR'>\";\n");
      out.write("var TR_todaybutton = \"<tr class='dpTodayButtonTR'>\";\n");
      out.write("var xTR = \"</tr>\" + crlf;\n");
      out.write("var TD = \"<td class='dpTD' onMouseOut='this.className=\\\"dpTD\\\";' onMouseOver=' this.className=\\\"dpTDHover\\\";' \"; // leave this tag open, because we'll be adding an onClick event\n");
      out.write("var TD_title = \"<td colspan=5 class='dpTitleTD'>\";\n");
      out.write("var TD_buttons = \"<td class='dpButtonTD'>\";\n");
      out.write("var TD_todaybutton = \"<td colspan=7 class='dpTodayButtonTD'>\";\n");
      out.write("var TD_days = \"<td class='dpDayTD'>\";\n");
      out.write("var TD_selected = \"<td class='dpDayHighlightTD' onMouseOut='this.className=\\\"dpDayHighlightTD\\\";' onMouseOver='this.className=\\\"dpTDHover\\\";' \"; // leave this tag open, because we'll be adding an onClick event\n");
      out.write("var xTD = \"</td>\" + crlf;\n");
      out.write("var DIV_title = \"<div class='dpTitleText'>\";\n");
      out.write("var DIV_selected = \"<div class='dpDayHighlight'>\";\n");
      out.write("var xDIV = \"</div>\";\n");
      out.write("\n");
      out.write("// start generating the code for the calendar table\n");
      out.write("var html = TABLE;\n");
      out.write("\n");
      out.write("// this is the title bar, which displays the month and the buttons to\n");
      out.write("// go back to a previous month or forward to the next month\n");
      out.write("html += TR_title;\n");
      out.write("html += TD_buttons + getButtonCode(dateFieldName, thisDay, -1, \"&lt;\") + xTD;\n");
      out.write("html += TD_title + DIV_title + monthArrayLong[ thisDay.getMonth()] + \" \" + thisDay.getFullYear() + xDIV + xTD;\n");
      out.write("html += TD_buttons + getButtonCode(dateFieldName, thisDay, 1, \"&gt;\") + xTD;\n");
      out.write("html += xTR;\n");
      out.write("\n");
      out.write("// this is the row that indicates which day of the week we're on\n");
      out.write("html += TR_days;\n");
      out.write("for(i = 0; i < dayArrayShort.length; i++)\n");
      out.write("html += TD_days + dayArrayShort[i] + xTD;\n");
      out.write("html += xTR;\n");
      out.write("\n");
      out.write("// now we'll start populating the table with days of the month\n");
      out.write("html += TR;\n");
      out.write("\n");
      out.write("// first, the leading blanks\n");
      out.write("for (i = 0; i < thisDay.getDay(); i++)\n");
      out.write("html += TD + \" \" + xTD;\n");
      out.write("\n");
      out.write("// now, the days of the month\n");
      out.write("do {\n");
      out.write("dayNum = thisDay.getDate();\n");
      out.write("TD_onclick = \" onclick=\\\"updateDateField('\" + dateFieldName + \"', '\" + getDateString(thisDay) + \"');\\\">\";\n");
      out.write("\n");
      out.write("if (dayNum == day)\n");
      out.write("html += TD_selected + TD_onclick + DIV_selected + dayNum + xDIV + xTD;\n");
      out.write("else\n");
      out.write("html += TD + TD_onclick + dayNum + xTD;\n");
      out.write("\n");
      out.write("// if this is a Saturday, start a new row\n");
      out.write("if (thisDay.getDay() == 6)\n");
      out.write("html += xTR + TR;\n");
      out.write("\n");
      out.write("// increment the day\n");
      out.write("thisDay.setDate(thisDay.getDate() + 1);\n");
      out.write("} while (thisDay.getDate() > 1)\n");
      out.write("\n");
      out.write("// fill in any trailing blanks\n");
      out.write("if (thisDay.getDay() > 0) {\n");
      out.write("for (i = 6; i > thisDay.getDay(); i--)\n");
      out.write("html += TD + \" \" + xTD;\n");
      out.write("}\n");
      out.write("html += xTR;\n");
      out.write("\n");
      out.write("// add a button to allow the user to easily return to today, or close the calendar\n");
      out.write("var today = new Date();\n");
      out.write("var todayString = \"Today is \" + dayArrayMed[today.getDay()] + \", \" + monthArrayMed[ today.getMonth()] + \" \" + today.getDate();\n");
      out.write("html += TR_todaybutton + TD_todaybutton;\n");
      out.write("html += \"<button class='dpTodayButton' onClick='refreshDatePicker(\\\"\" + dateFieldName + \"\\\");'>this month</button> \";\n");
      out.write("html += \"<button class='dpTodayButton' onClick='updateDateField(\\\"\" + dateFieldName + \"\\\");'>close</button>\";\n");
      out.write("html += xTD + xTR;\n");
      out.write("\n");
      out.write("// and finally, close the table\n");
      out.write("html += xTABLE;\n");
      out.write("document.getElementById(datePickerDivID).innerHTML = html;\n");
      out.write("// add an \"iFrame shim\" to allow the datepicker to display above selection lists\n");
      out.write("adjustiFrame();\n");
      out.write("}\n");
      out.write("/**\n");
      out.write("Convenience function for writing the code for the buttons that bring us back or forward\n");
      out.write("a month.\n");
      out.write("*/\n");
      out.write("function getButtonCode(dateFieldName, dateVal, adjust, label)\n");
      out.write("{\n");
      out.write("var newMonth = (dateVal.getMonth () + adjust) % 12;\n");
      out.write("var newYear = dateVal.getFullYear() + parseInt((dateVal.getMonth() + adjust) / 12);\n");
      out.write("if (newMonth < 0) {\n");
      out.write("newMonth += 12;\n");
      out.write("newYear += -1;\n");
      out.write("}\n");
      out.write("\n");
      out.write("return \"<button class='dpButton' onClick='refreshDatePicker(\\\"\" + dateFieldName + \"\\\", \" + newYear + \", \" + newMonth + \");'>\" + label + \"</button>\";\n");
      out.write("}\n");
      out.write("/**\n");
      out.write("Convert a JavaScript Date object to a string, based on the dateFormat and dateSeparator\n");
      out.write("variables at the beginning of this script library.\n");
      out.write("*/\n");
      out.write("function getDateString(dateVal)\n");
      out.write("{\n");
      out.write("var dayString = \"00\" + dateVal.getDate();\n");
      out.write("var monthString = \"00\" + (dateVal.getMonth()+1);\n");
      out.write("dayString = dayString.substring(dayString.length - 2);\n");
      out.write("monthString = monthString.substring(monthString.length - 2);\n");
      out.write("\n");
      out.write("switch (dateFormat) {\n");
      out.write("case \"dmy\" :\n");
      out.write("return dayString + dateSeparator + monthString + dateSeparator + dateVal.getFullYear();\n");
      out.write("case \"ymd\" :\n");
      out.write("return dateVal.getFullYear() + dateSeparator + monthString + dateSeparator + dayString;\n");
      out.write("case \"mdy\" :\n");
      out.write("default :\n");
      out.write("return monthString + dateSeparator + dayString + dateSeparator + dateVal.getFullYear();\n");
      out.write("}\n");
      out.write("}\n");
      out.write("/**\n");
      out.write("Convert a string to a JavaScript Date object.\n");
      out.write("*/\n");
      out.write("function getFieldDate(dateString)\n");
      out.write("{\n");
      out.write("var dateVal;\n");
      out.write("var dArray;\n");
      out.write("var d, m, y;\n");
      out.write("\n");
      out.write("try {\n");
      out.write("dArray = splitDateString(dateString);\n");
      out.write("if (dArray) {\n");
      out.write("switch (dateFormat) {\n");
      out.write("case \"dmy\" :\n");
      out.write("d = parseInt(dArray[0], 10);\n");
      out.write("m = parseInt(dArray[1], 10) - 1;\n");
      out.write("y = parseInt(dArray[2], 10);\n");
      out.write("break;\n");
      out.write("case \"ymd\" :\n");
      out.write("d = parseInt(dArray[2], 10);\n");
      out.write("m = parseInt(dArray[1], 10) - 1;\n");
      out.write("y = parseInt(dArray[0], 10);\n");
      out.write("break;\n");
      out.write("case \"mdy\" :\n");
      out.write("default :\n");
      out.write("d = parseInt(dArray[1], 10);\n");
      out.write("m = parseInt(dArray[0], 10) - 1;\n");
      out.write("y = parseInt(dArray[2], 10);\n");
      out.write("break;\n");
      out.write("}\n");
      out.write("dateVal = new Date(y, m, d);\n");
      out.write("} else if (dateString) {\n");
      out.write("dateVal = new Date(dateString);\n");
      out.write("} else {\n");
      out.write("dateVal = new Date();\n");
      out.write("}\n");
      out.write("} catch(e) {\n");
      out.write("dateVal = new Date();\n");
      out.write("}\n");
      out.write("\n");
      out.write("return dateVal;\n");
      out.write("}\n");
      out.write("/**\n");
      out.write("Try to split a date string into an array of elements, using common date separators.\n");
      out.write("If the date is split, an array is returned; otherwise, we just return false.\n");
      out.write("*/\n");
      out.write("function splitDateString(dateString)\n");
      out.write("{\n");
      out.write("var dArray;\n");
      out.write("if (dateString.indexOf(\"/\") >= 0)\n");
      out.write("dArray = dateString.split(\"/\");\n");
      out.write("else if (dateString.indexOf(\".\") >= 0)\n");
      out.write("dArray = dateString.split(\".\");\n");
      out.write("else if (dateString.indexOf(\"-\") >= 0)\n");
      out.write("dArray = dateString.split(\"-\");\n");
      out.write("else if (dateString.indexOf(\"\\\\\") >= 0)\n");
      out.write("dArray = dateString.split(\"\\\\\");\n");
      out.write("else\n");
      out.write("dArray = false;\n");
      out.write("\n");
      out.write("return dArray;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function updateDateField(dateFieldName, dateString)\n");
      out.write("{\n");
      out.write("var targetDateField = document.getElementsByName (dateFieldName).item(0);\n");
      out.write("if (dateString)\n");
      out.write("targetDateField.value = dateString;\n");
      out.write("\n");
      out.write("var pickerDiv = document.getElementById(datePickerDivID);\n");
      out.write("pickerDiv.style.visibility = \"hidden\";\n");
      out.write("pickerDiv.style.display = \"none\";\n");
      out.write("\n");
      out.write("adjustiFrame();\n");
      out.write("targetDateField.focus();\n");
      out.write("\n");
      out.write("if ((dateString) && (typeof(datePickerClosed) == \"function\"))\n");
      out.write("datePickerClosed(targetDateField);\n");
      out.write("}\n");
      out.write("function adjustiFrame(pickerDiv, iFrameDiv)\n");
      out.write("{\n");
      out.write("var is_opera = (navigator.userAgent.toLowerCase().indexOf(\"opera\") != -1);\n");
      out.write("if (is_opera)\n");
      out.write("return;\n");
      out.write("\n");
      out.write("// put a try/catch block around the whole thing, just in case\n");
      out.write("try {\n");
      out.write("if (!document.getElementById(iFrameDivID)) {\n");
      out.write("var newNode = document.createElement(\"iFrame\");\n");
      out.write("newNode.setAttribute(\"id\", iFrameDivID);\n");
      out.write("newNode.setAttribute(\"src\", \"javascript:false;\");\n");
      out.write("newNode.setAttribute(\"scrolling\", \"no\");\n");
      out.write("newNode.setAttribute (\"frameborder\", \"0\");\n");
      out.write("document.body.appendChild(newNode);\n");
      out.write("}\n");
      out.write("\n");
      out.write("if (!pickerDiv)\n");
      out.write("pickerDiv = document.getElementById(datePickerDivID);\n");
      out.write("if (!iFrameDiv)\n");
      out.write("iFrameDiv = document.getElementById(iFrameDivID);\n");
      out.write("\n");
      out.write("try {\n");
      out.write("iFrameDiv.style.position = \"absolute\";\n");
      out.write("iFrameDiv.style.width = pickerDiv.offsetWidth;\n");
      out.write("iFrameDiv.style.height = pickerDiv.offsetHeight ;\n");
      out.write("iFrameDiv.style.top = pickerDiv.style.top;\n");
      out.write("iFrameDiv.style.left = pickerDiv.style.left;\n");
      out.write("iFrameDiv.style.zIndex = pickerDiv.style.zIndex - 1;\n");
      out.write("iFrameDiv.style.visibility = pickerDiv.style.visibility ;\n");
      out.write("iFrameDiv.style.display = pickerDiv.style.display;\n");
      out.write("} catch(e) {\n");
      out.write("}\n");
      out.write("\n");
      out.write("} catch (ee) {\n");
      out.write("}\n");
      out.write("\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("font-family: Verdana, Tahoma, Arial, Helvetica, sans-serif;\n");
      out.write("font-size: .8em;\n");
      out.write("}\n");
      out.write("/* the div that holds the date picker calendar */\n");
      out.write(".dpDiv {\n");
      out.write("}\n");
      out.write("/* the table (within the div) that holds the date picker calendar */\n");
      out.write(".dpTable {\n");
      out.write("font-family: Tahoma, Arial, Helvetica, sans-serif;\n");
      out.write("font-size: 12px;\n");
      out.write("text-align: center;\n");
      out.write("color: #505050;\n");
      out.write("background-color: #ece9d8;\n");
      out.write("border: 1px solid #AAAAAA;\n");
      out.write("}\n");
      out.write("/* a table row that holds date numbers (either blank or 1-31) */\n");
      out.write(".dpTR {\n");
      out.write("}\n");
      out.write("/* the top table row that holds the month, year, and forward/backward buttons */\n");
      out.write(".dpTitleTR {\n");
      out.write("}\n");
      out.write("/* the second table row, that holds the names of days of the week (Mo, Tu, We, etc.) */\n");
      out.write(".dpDayTR {\n");
      out.write("}\n");
      out.write("/* the bottom table row, that has the \"This Month\" and \"Close\" buttons */\n");
      out.write(".dpTodayButtonTR {\n");
      out.write("}\n");
      out.write("/* a table cell that holds a date number (either blank or 1-31) */\n");
      out.write(".dpTD {\n");
      out.write("border: 1px solid #ece9d8;\n");
      out.write("}\n");
      out.write("/* a table cell that holds a highlighted day (usually either today's date or the current date field value) */\n");
      out.write(".dpDayHighlightTD {\n");
      out.write("background-color: #CCCCCC;\n");
      out.write("border: 1px solid #AAAAAA;\n");
      out.write("}\n");
      out.write("/* the date number table cell that the mouse pointer is currently over (you can use contrasting colors to make it apparent which cell is being hovered over) */\n");
      out.write(".dpTDHover {\n");
      out.write("background-color: #aca998;\n");
      out.write("border: 1px solid #888888;\n");
      out.write("cursor: pointer;\n");
      out.write("color: red;\n");
      out.write("}\n");
      out.write("/* the table cell that holds the name of the month and the year */\n");
      out.write(".dpTitleTD {\n");
      out.write("}\n");
      out.write("/* a table cell that holds one of the forward/backward buttons */\n");
      out.write(".dpButtonTD {\n");
      out.write("}\n");
      out.write("/* the table cell that holds the \"This Month\" or \"Close\" button at the bottom */\n");
      out.write(".dpTodayButtonTD {\n");
      out.write("}\n");
      out.write("/* a table cell that holds the names of days of the week (Mo, Tu, We, etc.) */\n");
      out.write(".dpDayTD {\n");
      out.write("background-color: #CCCCCC;\n");
      out.write("border: 1px solid #AAAAAA;\n");
      out.write("color: white;\n");
      out.write("}\n");
      out.write("/* additional style information for the text that indicates the month and year */\n");
      out.write(".dpTitleText {\n");
      out.write("font-size: 12px;\n");
      out.write("color: gray;\n");
      out.write("font-weight: bold;\n");
      out.write("}\n");
      out.write("/* additional style information for the cell that holds a highlighted day (usually either today's date or the current date field value) */ \n");
      out.write(".dpDayHighlight {\n");
      out.write("color: 4060ff;\n");
      out.write("font-weight: bold;\n");
      out.write("}\n");
      out.write("/* the forward/backward buttons at the top */\n");
      out.write(".dpButton {\n");
      out.write("font-family: Verdana, Tahoma, Arial, Helvetica, sans-serif;\n");
      out.write("font-size: 10px;\n");
      out.write("color: gray;\n");
      out.write("background: #d8e8ff;\n");
      out.write("font-weight: bold;\n");
      out.write("padding: 0px;\n");
      out.write("}\n");
      out.write("/* the \"This Month\" and \"Close\" buttons at the bottom */\n");
      out.write(".dpTodayButton {\n");
      out.write("font-family: Verdana, Tahoma, Arial, Helvetica, sans-serif;\n");
      out.write("font-size: 10px;\n");
      out.write("color: gray;\n");
      out.write("background: #d8e8ff;\n");
      out.write("font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"niceforms-default.css\" />\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"main_container\">\n");
      out.write("\n");
      out.write("   <div class=\"header\">\n");
      out.write("   <div class=\"logo\"><a href=\"#\"><img src=\"images/Mechatronics_logo.jpg\" alt=\"\" title=\"\" border=\"0\" /></a></div>\n");
      out.write("   <div id=\"clock_a\"></div>\n");
      out.write("   </div>    \n");
      out.write("   <div class=\"main_content\">\n");
      out.write("    \n");
      out.write("            <div class=\"menu\">\n");
      out.write("                 <ul>\n");
      out.write("                    <li><a class=\"current\" href=\"Admin_Page.jsp\">Admin Home</a></li>\n");
      out.write("                    <li><a href=\"\">Masters</a>\n");
      out.write("                        <ul>\n");
      out.write("                        <li><a href=\"./Select_Conttroller\" title=\"\">State Master</a></li>\n");
      out.write("                        <li><a href=\"./Select_City_Conttroller\" title=\"\">City Master</a></li>\n");
      out.write("                        <li><a href=\"./Select_Info_Client\" title=\"\">Client Master</a></li>      \n");
      out.write("                        <li><a href=\"./Select_PartMaster\" title=\"\">Part Master</a></li>          \n");
      out.write("                        </ul>                    \n");
      out.write("                    </li> \n");
      out.write("                    \n");
      out.write("                    <li><a href=\"Sales_Register.jsp\">Sales Register</a></li>\n");
      out.write("                    <li><a href=\"AboutUs.jsp\">About Us</a></li>\n");
      out.write("                    <li><a href=\"Login.jsp\">Logout</a></li>\n");
      out.write("                    </ul>\n");
      out.write("            </div>                                        \n");
      out.write("                    \n");
      out.write("<div class=\"center_content\">     \n");
      out.write("       \n");
      out.write("    <div class=\"left_content\">\n");
      out.write("            <!--<div class=\"sidebar_search\">\n");
      out.write("            <form>\n");
      out.write("            <input type=\"text\" name=\"\" class=\"search_input\" value=\"search keyword\" onclick=\"this.value=''\" />\n");
      out.write("            <input type=\"image\" class=\"search_submit\" src=\"images/search.png\" />\n");
      out.write("            </form>\n");
      out.write("            </div>--> \n");
      out.write("             <div class=\"sidebarmenu\">\n");
      out.write("            \n");
      out.write("                <a class=\"menuitem submenuheader menuitem_green\" href=\"\"> Masters</a>\n");
      out.write("                <div class=\"submenu\">\n");
      out.write("                    <ul>\n");
      out.write("                        <li><a href=\"./Select_Conttroller\" title=\"\">State Master</a></li>\n");
      out.write("                        <li><a href=\"./Select_City_Conttroller\" title=\"\">City Master</a></li>\n");
      out.write("                        <li><a href=\"./Select_Info_Client\" title=\"\">Client Master</a></li>      \n");
      out.write("                        <li><a href=\"./Select_PartMaster\" title=\"\">Part Master</a></li>          \n");
      out.write("                    </ul>    \n");
      out.write("                </div>\n");
      out.write("                <a class=\"menuitem submenuheader \" href=\"Sales_Register.jsp\">Sales Register</a>\n");
      out.write("                <div class=\"submenu\">\n");
      out.write("                    <ul>\n");
      out.write("                        <li><a href=\"Sales_Register.jsp\">Sales Register</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("                <a class=\"menuitem submenuheader menuitem_green\" href=\"\">About Us</a>\n");
      out.write("                <div class=\"submenu\">\n");
      out.write("                    <ul>\n");
      out.write("                        <li><a href=\"AboutUs.jsp\">About Us</a></li>\n");
      out.write("                    </ul>    \n");
      out.write("                </div>\n");
      out.write("                <a class=\"menuitem submenuheader \" href=\"\">Logout</a>\n");
      out.write("                <div class=\"submenu\">\n");
      out.write("                    <ul>\n");
      out.write("                        <li><a href=\"Login.jsp\">Logout</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("    </div>    \n");
      out.write("    \n");
      out.write("   <div class=\"right_content\">                    \n");
      out.write("   \n");
      out.write("       <div class=\"form\">\n");
      out.write("          ");

            String id = (String)request.getAttribute("id");
            String no = (String)request.getAttribute("no");
            String nm = (String)request.getAttribute("nm");
            String de = (String)request.getAttribute("de");
            if(id!=null){
         
      out.write("\n");
      out.write("        <form action=\"Update_PartMaster\" method=\"post\">\n");
      out.write("            <input type=\"hidden\" name=\"txtpid\" value=\"");
      out.print(id);
      out.write("\" />\n");
      out.write("            <table>\n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"PartNO\">PartNO:</label></td>\n");
      out.write("                        <td><input type=\"integer\" name=\"partno\" id=\"\" style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z0-9]{1,10}\"/></td>\n");
      out.write("                    </tr>                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"PartName\">PartName:</label></td>\n");
      out.write("                        <td><input type=\"text\" name=\"partname\" id=\"\"  style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z]{1,20}\"/></td>\n");
      out.write("                    </tr>                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"Description\">Description:</label></td>\n");
      out.write("                        <td><input type=\"text\" name=\"description\" id=\"\"  style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z]{1,20}\"/></td>\n");
      out.write("                    </tr>  \n");
      out.write("                    <tr>\n");
      out.write("                        <td> </td>    \n");
      out.write("                        <td> <input type=\"submit\" value=\"Update\"/></td>\n");
      out.write("                        <td> </td>    \n");
      out.write("                    </tr>               \n");
      out.write("         </form>\n");
      out.write("        ");

            }
            else{
        
      out.write("   \n");
      out.write("         <form action=\"Insert_PartMaster\" method=\"post\">\n");
      out.write("            <table>\n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"PartNO\">PartNO:</label></td>\n");
      out.write("                        <td><input type=\"integer\" name=\"PartNo\" id=\"\"  style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z0-9]{1,10}\"/></td>\n");
      out.write("                    </tr>                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"PartName\">PartName:</label></td>\n");
      out.write("                        <td><input type=\"text\" name=\"PartName\" id=\"\"  style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z]{1,20}\"/></td>\n");
      out.write("                    </tr>                    \n");
      out.write("                    <tr>\n");
      out.write("                        <td><label for=\"Description\">Description:</label></td>\n");
      out.write("                        <td><input type=\"text\" name=\"Description\" id=\"\"  style=\"width:200px;height:30px;\" required pattern=\"[A-Za-z]{1,20}\"/></td>\n");
      out.write("                    </tr>                 \n");
      out.write("                    <tr>\n");
      out.write("                        <td> </td>    \n");
      out.write("                        <td> <input type=\"submit\" value=\"Insert\"/></td>\n");
      out.write("                        <td> </td>    \n");
      out.write("                    </tr>                    \n");
      out.write("                   </table>\n");
      out.write("         </form>\n");
      out.write("        <br>\n");
      out.write("        <table border=\"1\">\n");
      out.write("            <tr>\n");
      out.write("                <td>Partid</td>\n");
      out.write("                <td>PartNo</td>\n");
      out.write("                <td>PartName</td>\n");
      out.write("                <td>Description</td>\n");
      out.write("                <td>Edit</td>\n");
      out.write("                <td>Delete</td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                ArrayList<PartMaster_Bean> acoublist = (ArrayList<PartMaster_Bean>)request.getAttribute("part");
                if(acoublist!=null)
                {
                    Iterator<PartMaster_Bean> itr = acoublist.iterator();
                    while(itr.hasNext()){
                        PartMaster_Bean cb = (PartMaster_Bean)itr.next();
                        String pid = cb.getPartid();
                        String pno = cb.getPartNo();
                        String pname = cb.getPartName();
                        String des = cb.getDescription();
            
      out.write("\n");
      out.write("            <tr>\n");
      out.write("                <td>");
      out.print(pid);
      out.write("</td>\n");
      out.write("                <td>");
      out.print(pno);
      out.write("</td>\n");
      out.write("                <td>");
      out.print(pname);
      out.write("</td>\n");
      out.write("                <td>");
      out.print(des);
      out.write("</td>\n");
      out.write("                <td><a href=\"Edit_PartMaster?pid=");
      out.print(pid);
      out.write("&pno=");
      out.print(pno);
      out.write("&pname=");
      out.print(pname);
      out.write("&des=");
      out.print(des);
      out.write("\">Edit</a></td>\n");
      out.write("                <td><a href=\"Delete_PartMaster?pid=");
      out.print(pid);
      out.write("\">Delete</a></td>\n");
      out.write("            </tr>\n");
      out.write("            ");

                    }
                }
            }
            
      out.write("\n");
      out.write("        </table>       \n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div><!--Center Content -->\n");
      out.write("<div class=\"clear\"></div>            \n");
      out.write("</div> <!--end of main content-->\n");
      out.write("<div class=\"footer\"> <div class=\"right_footer\"></div> </div>\n");
      out.write("\n");
      out.write("</div><!--Main Container -->\t\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
